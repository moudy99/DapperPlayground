// <auto-generated />
using System;
using Dapper_VS_EFcore.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Dapper_VS_EFcore.Migrations
{
    [DbContext(typeof(EFcoreDbContext))]
    [Migration("20250217000453_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Dapper_VS_EFcore.Models.Category", b =>
                {
                    b.Property<int>("CategoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryID"));

                    b.Property<int?>("GameID")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoryID");

                    b.HasIndex("GameID");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("Dapper_VS_EFcore.Models.Developer", b =>
                {
                    b.Property<int>("DeveloperID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DeveloperID"));

                    b.Property<int?>("GameID")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DeveloperID");

                    b.HasIndex("GameID");

                    b.ToTable("Developers");
                });

            modelBuilder.Entity("Dapper_VS_EFcore.Models.Game", b =>
                {
                    b.Property<int>("GameID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GameID"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MetacriticScore")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("ReleaseDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("RequiredAge")
                        .HasColumnType("int");

                    b.Property<string>("Website")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GameID");

                    b.ToTable("Games");
                });

            modelBuilder.Entity("Dapper_VS_EFcore.Models.GameCategory", b =>
                {
                    b.Property<int>("GameID")
                        .HasColumnType("int");

                    b.Property<int>("CategoryID")
                        .HasColumnType("int");

                    b.HasKey("GameID", "CategoryID");

                    b.HasIndex("CategoryID");

                    b.ToTable("GameCategories");
                });

            modelBuilder.Entity("Dapper_VS_EFcore.Models.GameDeveloper", b =>
                {
                    b.Property<int>("GameID")
                        .HasColumnType("int");

                    b.Property<int>("DeveloperID")
                        .HasColumnType("int");

                    b.HasKey("GameID", "DeveloperID");

                    b.HasIndex("DeveloperID");

                    b.ToTable("GameDevelopers");
                });

            modelBuilder.Entity("Dapper_VS_EFcore.Models.GameGenre", b =>
                {
                    b.Property<int>("GameID")
                        .HasColumnType("int");

                    b.Property<int>("GenreID")
                        .HasColumnType("int");

                    b.HasKey("GameID", "GenreID");

                    b.HasIndex("GenreID");

                    b.ToTable("GameGenres");
                });

            modelBuilder.Entity("Dapper_VS_EFcore.Models.GameLanguage", b =>
                {
                    b.Property<int>("GameID")
                        .HasColumnType("int");

                    b.Property<int>("LanguageID")
                        .HasColumnType("int");

                    b.HasKey("GameID", "LanguageID");

                    b.HasIndex("LanguageID");

                    b.ToTable("GameLanguages");
                });

            modelBuilder.Entity("Dapper_VS_EFcore.Models.GamePublisher", b =>
                {
                    b.Property<int>("GameID")
                        .HasColumnType("int");

                    b.Property<int>("PublisherID")
                        .HasColumnType("int");

                    b.HasKey("GameID", "PublisherID");

                    b.HasIndex("PublisherID");

                    b.ToTable("GamePublishers");
                });

            modelBuilder.Entity("Dapper_VS_EFcore.Models.GameTag", b =>
                {
                    b.Property<int>("GameID")
                        .HasColumnType("int");

                    b.Property<int>("TagID")
                        .HasColumnType("int");

                    b.HasKey("GameID", "TagID");

                    b.HasIndex("TagID");

                    b.ToTable("GameTags");
                });

            modelBuilder.Entity("Dapper_VS_EFcore.Models.Genre", b =>
                {
                    b.Property<int>("GenreID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GenreID"));

                    b.Property<int?>("GameID")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GenreID");

                    b.HasIndex("GameID");

                    b.ToTable("Genres");
                });

            modelBuilder.Entity("Dapper_VS_EFcore.Models.Language", b =>
                {
                    b.Property<int>("LanguageID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LanguageID"));

                    b.Property<int?>("GameID")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LanguageID");

                    b.HasIndex("GameID");

                    b.ToTable("Languages");
                });

            modelBuilder.Entity("Dapper_VS_EFcore.Models.Package", b =>
                {
                    b.Property<int>("PackageID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PackageID"));

                    b.Property<int>("GameID")
                        .HasColumnType("int");

                    b.Property<decimal?>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PackageID");

                    b.HasIndex("GameID");

                    b.ToTable("Packages");
                });

            modelBuilder.Entity("Dapper_VS_EFcore.Models.Publisher", b =>
                {
                    b.Property<int>("PublisherID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PublisherID"));

                    b.Property<int?>("GameID")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PublisherID");

                    b.HasIndex("GameID");

                    b.ToTable("Publishers");
                });

            modelBuilder.Entity("Dapper_VS_EFcore.Models.Screenshot", b =>
                {
                    b.Property<int>("ScreenshotID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ScreenshotID"));

                    b.Property<int>("GameID")
                        .HasColumnType("int");

                    b.Property<string>("URL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ScreenshotID");

                    b.HasIndex("GameID");

                    b.ToTable("Screenshots");
                });

            modelBuilder.Entity("Dapper_VS_EFcore.Models.Tag", b =>
                {
                    b.Property<int>("TagID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TagID"));

                    b.Property<int?>("GameID")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TagID");

                    b.HasIndex("GameID");

                    b.ToTable("Tags");
                });

            modelBuilder.Entity("Dapper_VS_EFcore.Models.Category", b =>
                {
                    b.HasOne("Dapper_VS_EFcore.Models.Game", null)
                        .WithMany("Categories")
                        .HasForeignKey("GameID");
                });

            modelBuilder.Entity("Dapper_VS_EFcore.Models.Developer", b =>
                {
                    b.HasOne("Dapper_VS_EFcore.Models.Game", null)
                        .WithMany("Developers")
                        .HasForeignKey("GameID");
                });

            modelBuilder.Entity("Dapper_VS_EFcore.Models.GameCategory", b =>
                {
                    b.HasOne("Dapper_VS_EFcore.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Dapper_VS_EFcore.Models.Game", "Game")
                        .WithMany("GameCategories")
                        .HasForeignKey("GameID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Game");
                });

            modelBuilder.Entity("Dapper_VS_EFcore.Models.GameDeveloper", b =>
                {
                    b.HasOne("Dapper_VS_EFcore.Models.Developer", "Developer")
                        .WithMany()
                        .HasForeignKey("DeveloperID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Dapper_VS_EFcore.Models.Game", "Game")
                        .WithMany("GameDevelopers")
                        .HasForeignKey("GameID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Developer");

                    b.Navigation("Game");
                });

            modelBuilder.Entity("Dapper_VS_EFcore.Models.GameGenre", b =>
                {
                    b.HasOne("Dapper_VS_EFcore.Models.Game", "Game")
                        .WithMany("GameGenres")
                        .HasForeignKey("GameID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Dapper_VS_EFcore.Models.Genre", "Genre")
                        .WithMany()
                        .HasForeignKey("GenreID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Game");

                    b.Navigation("Genre");
                });

            modelBuilder.Entity("Dapper_VS_EFcore.Models.GameLanguage", b =>
                {
                    b.HasOne("Dapper_VS_EFcore.Models.Game", "Game")
                        .WithMany("GameLanguages")
                        .HasForeignKey("GameID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Dapper_VS_EFcore.Models.Language", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Game");

                    b.Navigation("Language");
                });

            modelBuilder.Entity("Dapper_VS_EFcore.Models.GamePublisher", b =>
                {
                    b.HasOne("Dapper_VS_EFcore.Models.Game", "Game")
                        .WithMany("GamePublishers")
                        .HasForeignKey("GameID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Dapper_VS_EFcore.Models.Publisher", "Publisher")
                        .WithMany()
                        .HasForeignKey("PublisherID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Game");

                    b.Navigation("Publisher");
                });

            modelBuilder.Entity("Dapper_VS_EFcore.Models.GameTag", b =>
                {
                    b.HasOne("Dapper_VS_EFcore.Models.Game", "Game")
                        .WithMany("GameTags")
                        .HasForeignKey("GameID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Dapper_VS_EFcore.Models.Tag", "Tag")
                        .WithMany()
                        .HasForeignKey("TagID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Game");

                    b.Navigation("Tag");
                });

            modelBuilder.Entity("Dapper_VS_EFcore.Models.Genre", b =>
                {
                    b.HasOne("Dapper_VS_EFcore.Models.Game", null)
                        .WithMany("Genres")
                        .HasForeignKey("GameID");
                });

            modelBuilder.Entity("Dapper_VS_EFcore.Models.Language", b =>
                {
                    b.HasOne("Dapper_VS_EFcore.Models.Game", null)
                        .WithMany("Languages")
                        .HasForeignKey("GameID");
                });

            modelBuilder.Entity("Dapper_VS_EFcore.Models.Package", b =>
                {
                    b.HasOne("Dapper_VS_EFcore.Models.Game", null)
                        .WithMany("Packages")
                        .HasForeignKey("GameID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Dapper_VS_EFcore.Models.Publisher", b =>
                {
                    b.HasOne("Dapper_VS_EFcore.Models.Game", null)
                        .WithMany("Publishers")
                        .HasForeignKey("GameID");
                });

            modelBuilder.Entity("Dapper_VS_EFcore.Models.Screenshot", b =>
                {
                    b.HasOne("Dapper_VS_EFcore.Models.Game", null)
                        .WithMany("Screenshots")
                        .HasForeignKey("GameID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Dapper_VS_EFcore.Models.Tag", b =>
                {
                    b.HasOne("Dapper_VS_EFcore.Models.Game", null)
                        .WithMany("Tags")
                        .HasForeignKey("GameID");
                });

            modelBuilder.Entity("Dapper_VS_EFcore.Models.Game", b =>
                {
                    b.Navigation("Categories");

                    b.Navigation("Developers");

                    b.Navigation("GameCategories");

                    b.Navigation("GameDevelopers");

                    b.Navigation("GameGenres");

                    b.Navigation("GameLanguages");

                    b.Navigation("GamePublishers");

                    b.Navigation("GameTags");

                    b.Navigation("Genres");

                    b.Navigation("Languages");

                    b.Navigation("Packages");

                    b.Navigation("Publishers");

                    b.Navigation("Screenshots");

                    b.Navigation("Tags");
                });
#pragma warning restore 612, 618
        }
    }
}
